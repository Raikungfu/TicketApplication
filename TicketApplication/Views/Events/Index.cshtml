@model IEnumerable<TicketApplication.Models.Event>

@{
    TempData["Title"] = "Index";
}

<h1 class="mb-4">Event Management</h1>

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>

<div class="btn-group mb-3">
    <button type="button" class="btn btn-primary" onclick="filterEvents('All')">All</button>
    <button type="button" class="btn btn-info" onclick="filterEvents('Admin')">Admin</button>
    <button type="button" class="btn btn-warning" onclick="filterEvents('Customer')">Customer</button>
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Location)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Image)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedAt)
                </th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="text-truncate">
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td class="text-truncate">
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td class="text-truncate">
                        @Html.DisplayFor(modelItem => item.Location)
                    </td>
                    <td class="text-truncate">
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.Image))
                        {
                            <img src="@Url.Content("~/Images/" + item.Image)" alt="Event Image" class="img-thumbnail" style="width: 100px; height: auto;" />
                        }
                        else
                        {
                            <span>No Image</span>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                    <td class="text-center">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                        <form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;" id="deleteForm-@item.Id">
                            <input type="hidden" name="id" value="@item.Id" />
                            <button type="button" class="btn btn-sm btn-danger" onclick="openDeleteModal('@item.Id', '@item.Title')">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (TempData["ShowModal"] != null && (bool)TempData["ShowModal"])
{
    <div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="successModalLabel">Event Created Successfully</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Để workshop của bạn được duyệt, vui lòng liên hệ với chúng tôi qua fanpage Facebook</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmModalLabel">Xác nhận xóa sự kiện</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa sự kiện <span id="eventTitle"></span>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Xóa</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>

        function filterEvents(type) {
            window.location.href = '@Url.Action("Index", "Events")?filter=' + type;
        }

        function openDeleteModal(eventId, eventTitle) {
            document.getElementById('eventTitle').innerText = eventTitle;
            var myModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
            myModal.show();

            document.getElementById('confirmDeleteButton').onclick = function () {
                document.getElementById('deleteForm-' + eventId).submit();
                myModal.hide();
            };
        }


        $(document).ready(function () {
            if ('@TempData["ShowModal"]' == 'True') {
                var myModal = new bootstrap.Modal(document.getElementById('successModal'));
                myModal.show();
            }
        });
    </script>
}



<style>
    /* CSS for truncating text with ellipsis in table cells */
    .text-truncate {
        overflow: hidden; /* Hides overflow text */
        white-space: nowrap; /* Prevents wrapping */
        text-overflow: ellipsis; /* Displays ellipsis (...) when text overflows */
        max-width: 150px; /* Set a max width for the cells */
    }
</style>
