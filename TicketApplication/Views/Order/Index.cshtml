@model IEnumerable<TicketApplication.Models.Order>

@{
    TempData["Title"] = "Orders History";
}

<div class="container mt-5">
    <h2 class="mb-4">Lịch sử đơn hàng</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-warning" role="alert">
            Không có order có sẵn
        </div>
    }
    else
    {
        <table class="table  table-bordered">
            <thead class="table-light">
                <tr>
                    <th>Mã đơn hàng</th>
                    <th>Email</th>
                    <th>Trạng thái thanh toán </th>
                    <th>Tổng tiền</th>
                    <th>Tùy chỉnh</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.Id</td>
                        <td>@order.User.Email</td>
                        <td>@order.Status</td>
                        <td>@order.TotalAmount đ</td>
                        <td>
                            <!-- Button to trigger the detail modal -->
                            <button class="btn btn-info"
                                    data-bs-toggle="modal"
                                    data-bs-target="#orderDetailModal"
                                    data-order-id="@order.Id"
                                    data-user-email="@order.User.Email"
                                    data-order-status="@order.Status"
                                    data-total-amount="@order.TotalAmount đ"
                                    data-order-details="@Html.Raw(string.Join(";",
            order.OrderDetails.SelectMany(d =>
                d.Tickets.Select(t => $"Ticket: {t.Id}, Zone: {t.Zone?.Name}, Số lượng: {d.Quantity}"))))">
                                Xem đơn hàng
                            </button>
                            @if (order.Status == "Pending")
                            {
                                <form asp-action="Delete" asp-route-id="@order.Id" method="post" style="display:inline;" id="deleteForm-@order.Id">
                                    <input type="hidden" name="orderId" value="@order.Id" />
                                    <button type="button" class="btn btn-danger" onclick="openDeleteModal('@order.Id', '@Html.Raw(string.Join(";", order.OrderDetails.SelectMany(d => d.Tickets.Select(t => $"Ticket: {t.Id}, Zone: {t.Zone?.Name}, Quantity: {d.Quantity}"))))')">Xóa</button>
                                </form>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

<!-- Order Details Modal -->
<form method="post" action="/Order/Checkout" onsubmit="return checkAgreement()">
    <div class="modal fade" id="orderDetailModal" tabindex="-1" aria-labelledby="orderDetailModalLabel" aria-hidden="true">
        <input name="orderId" id="orderId" hidden />
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="orderDetailModalLabel">Chi tiết đơn hàng</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h6>Mã đơn hàng: <span id="modalOrderId"></span></h6>
                    <h6>Email: <span id="modalUser Email"></span></h6>
                    <h6>Tổng tiền thanh toán: <span id="modalTotalAmount"></span></h6>
                    <h6>Chi tiết đơn hàng:</h6>
                    <ul id="modalOrderDetails"></ul>

                    <div class="row" id="paymentSection" style="display: none;">
                        <div class="col-md-8 offset-md-4">
                            <div id="discountSection" class="mb-4">
                                <h4>Áp dụng giảm giá:</h4>
                                <div class="form-group">
                                    <label for="orderDiscountCode">Nhập mã giảm giá:</label>
                                    <input type="text" id="orderDiscountCode" name="Code" class="form-control" placeholder="Mã giảm giá (nếu có)">
                                </div>
                                <div class="form-check">
                                    <input type="radio" id="useCodeDiscountOrder" name="discountOptionOrder" value="code" class="form-check-input">
                                    <label class="form-check-label" for="useCodeDiscountOrder">
                                        Áp dụng mã giảm giá
                                    </label>
                                </div>
                                <button type="button" class="btn btn-primary mt-3" onclick="applyOrderDiscount()">Kiểm tra</button>
                            </div>

                            <div class="form-check mt-3" style="background-color: #f9f9f9;">
                                <input class="form-check-input" type="checkbox" id="termsAgreement" required>
                                <label class="form-check-label d-inline-block ml-2" for="termsAgreement" style="max-height: 80px; display: inline-block; padding-right: 10px;">
                                    <strong>Đồng ý với các điều khoản:</strong>
                                    <ul style="margin: 0; padding-left: 20px;">
                                        <li>Khi quý khách hoàn tất quá trình thanh toán vé, giao dịch sẽ được xem là hoàn tất và không thể hủy bỏ hoặc hoàn tiền.</li>
                                    </ul>
                                </label>
                            </div>

                            <button type="submit" class="btn btn-primary btn-block mt-3">Tiến hành thanh toán</button>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>
</form>


<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the order? <br>
                <span id="orderDetail"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>
@if (TempData["ErrorMessage"] != null)
{
    <text>
        document.addEventListener('DOMContentLoaded', function () {
        showNotification('@TempData["ErrorMessage"]', 'danger');
        });
    </text>
}

@if (TempData["SuccessMessage"] != null)
{
    <text>
        document.addEventListener('DOMContentLoaded', function () {
        showNotification('@TempData["SuccessMessage"]', 'success');
        });
    </text>
}

@section Scripts {
    <script>
        function openDeleteModal(orderId, orderDetail) {
            try {
                document.getElementById('orderDetail').textContent = orderDetail;

                var myModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
                myModal.show();

                document.getElementById('confirmDeleteButton').onclick = function () {
                    document.getElementById('deleteForm-' + orderId).submit();
                    myModal.hide();
                };
            }catch(e){
                console.log(e);
            }
            
        }

        const orderDetailModal = document.getElementById('orderDetailModal');

        orderDetailModal.addEventListener('show.bs.modal', event => {
            const button = event.relatedTarget;
            if (!button) return;

            const orderId = button.getAttribute('data-order-id');
            const userEmail = button.getAttribute('data-user-email');
            const totalAmount = button.getAttribute('data-total-amount');
            const orderDetails = button.getAttribute('data-order-details');
            const orderStatus = button.getAttribute('data-order-status');

            if (orderStatus === "Pending") {
                document.getElementById('paymentSection').style.display = 'block';
            } else {
                document.getElementById('paymentSection').style.display = 'none';
            }

            document.getElementById('orderId').value = orderId;
            document.getElementById('modalOrderId').textContent = orderId;
            document.getElementById('modalUserEmail').textContent = userEmail;
            document.getElementById('modalTotalAmount').textContent = totalAmount;

            const detailsArray = orderDetails.split(';');
            const modalOrderDetailsList = document.getElementById('modalOrderDetails');
            modalOrderDetailsList.innerHTML = "";

            detailsArray.forEach(detail => {
                if (detail.trim()) {
                    const listItem = document.createElement('li');
                    listItem.textContent = detail.trim();
                    modalOrderDetailsList.appendChild(listItem);
                }
            });
        });

            function checkAgreement() {
                const isAgreed = document.getElementById('termsAgreement').checked;
                if (!isAgreed) {
                    showNotification('Bạn phải đồng ý với các điều khoản để tiếp tục.', 'danger');
                    return false;
                }
                return true;
            }

        function applyOrderDiscount() {
            const discountCode = document.getElementById("orderDiscountCode").value.trim();
            const useRank = document.querySelector('input[name="discountOptionOrder"]:checked').value === "rank";
            const orderId = document.getElementById("orderId").value;

            fetch('/Order/ApplyDiscount', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    OrderId: orderId,
                    Code: useRank ? null : discountCode,
                    Rank: useRank ? "rank" : null
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById("modalTotalAmount").textContent = data.newTotal + " đ";
                        showNotification(data.message, 'success');
                    } else {
                        showNotification(data.message, 'danger');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Có lỗi xảy ra.', 'danger');
                });
        }

    </script>
}
