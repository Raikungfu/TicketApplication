@model List<Event>

@{
    TempData["Title"] = "Home Page";
}
<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <button class="btn btn-outline-secondary  ms-auto" id="filterToggle" data-bs-toggle="collapse" data-bs-target="#filterOptions" aria-expanded="false" aria-controls="filterOptions">
            <i class="bi bi-funnel"></i> Filter
        </button>
    </div>

    <div class="collapse" id="filterOptions">
        <div class="card p-3">
            <h5>Filter Events</h5>

            <form class="mb-3 sidebar-wrap" id="form-filter">
                <label for="priceRange" class="form-label">Price Range</label>
                <div class="range-slider">
                    <span>
                        <output id="outPrice1">0</output><span> đ</span> -
                        <output id="outPrice2">5,000,000</output><span> đ</span>
                    </span>
                    <input id="minRange" name="PriceFrom" value="0" min="0" max="5000000" step="10000" type="range" oninput="updatePriceRange()" />
                    <input id="maxRange" name="PriceTo" value="5000000" min="0" max="5000000" step="10000" type="range" oninput="updatePriceRange()" />
                    <span id="PriceFrom" class="text-danger"></span>
                    <span id="PriceTo" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label for="category" class="form-label">Category</label>
                    <select class="form-select" id="category" name="Category">
                        <option value="all">All Categories</option>
                        <option value="academic">Học thuật</option>
                        <option value="bartending">Pha chế</option>
                        <option value="music">Âm nhạc</option>
                        <option value="sport">Thể thao</option>
                        <option value="theater">Hài kịch</option>
                    </select>
                </div>

                <button class="btn btn-primary" type="submit">Apply Filters</button>
            </form>
        </div>
    </div>

    <div id="eventsContainer" style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
        @foreach (var ev in Model)
        {
            <div class="card text-center">
                @if (!string.IsNullOrEmpty(ev.Image))
                {
                    <img src="@Url.Content("~/Images/" + ev.Image)" class="card-img-top" alt="@ev.Title" style="object-fit: cover; height: 200px;" />
                }
                else
                {
                    <div style="height: 200px; display: flex; justify-content: center; align-items: center;">
                        <span>No Image</span>
                    </div>
                }
                <div class="card-body">
                    <h5 class="card-title" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;" title="@ev.Title">@ev.Title</h5>
                    <p class="card-text">
                        <span>Giá từ:</span>
                        <span class="text-primary">@ev.MinTicketPrice.ToString("N0")</span> - <span class="text-primary">@ev.MaxTicketPrice.ToString("N0")</span>
                    </p>
                    <a href="@Url.Action("EventDetail", "Home", new { id = ev.Id })" class="btn btn-outline-primary rounded-pill btn-lg" role="button" aria-label="Lựa chọn cho @ev.Title">Select Ticket</a>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.js"></script>
    <script>
        function updatePriceRange() {
            const minRange = document.getElementById('minRange');
            const maxRange = document.getElementById('maxRange');
            const outPrice1 = document.getElementById('outPrice1');
            const outPrice2 = document.getElementById('outPrice2');

            if (parseInt(minRange.value) > parseInt(maxRange.value)) {
                minRange.value = maxRange.value;
            }

            if (parseInt(maxRange.value) < parseInt(minRange.value)) {
                maxRange.value = minRange.value;
            }

            outPrice1.value = formatPrice(minRange.value);
            outPrice2.value = formatPrice(maxRange.value);
        }

        function formatPrice(price) {
            return parseInt(price).toLocaleString();
        }

        const filterForm = document.getElementById("form-filter");
        filterForm.addEventListener("submit", async (e) => {
            e.preventDefault();
            const formData = new FormData(filterForm);
            const response = await fetch('/Home/Filter', {
                method: 'POST',
                body: formData
            });

            const result = await response.json();
            if (result.success) {
                displayEvents(result.events);
            } else {
                showNotification(result.message, 'danger');
            }
        });

        function displayEvents(events) {
            const eventContainer = document.getElementById('eventsContainer');
            eventContainer.innerHTML = '';

            events.forEach(ev => {
                const eventCard = `
                            <div class="card text-center event-card" data-min-price="${ev.minTicketPrice}" data-max-price="${ev.maxTicketPrice}">
                                                        ${ev.image ? `<img src="/Images/${ev.image}" class="card-img-top" alt="${ev.Title}" style="object-fit: cover; height: 200px;" />` :
                        `<div style="height: 200px; display: flex; justify-content: center; align-items: center;"><span>No Image</span></div>`}
                                <div class="card-body">
                                            <h5 class="card-title" title="${ev.title}">${ev.title}</h5>
                                    <p class="card-text">
                                        <span>Giá từ:</span>
                                        <span class="text-primary">${ev.minTicketPrice.toLocaleString()}</span> -
                                        <span class="text-primary">${ev.maxTicketPrice.toLocaleString()}</span>
                                    </p>
                                    <a href="/Home/EventDetail?id=${ev.id}" class="btn btn-outline-primary rounded-pill btn-lg">Select Ticket</a>
                                </div>
                            </div>
                        `;
                eventContainer.innerHTML += eventCard;
            });
        }


    </script>
}
<style>
    .sidebar-wrap {
        padding: 20px;
        border: 1px solid #e6e6e6;
        margin-bottom: 30px;
    }

    .sidebar-wrap .range-slider {
        width: 100%;
        margin: auto;
        position: relative;
        height: 3em;
        margin-bottom: 30px;
    }

        .sidebar-wrap .range-slider svg,
        .sidebar-wrap .range-slider input[type=range] {
            position: absolute;
            left: 0;
            bottom: 0;
        }


    .sidebar-wrap input[type=range] {
        -webkit-appearance: none;
        width: 100%;
    }

        .sidebar-wrap input[type=range]:focus {
            outline: none;
        }

            .sidebar-wrap input[type=range]:focus::-webkit-slider-runnable-track {
                background: #8d703b;
            }

            .sidebar-wrap input[type=range]:focus::-ms-fill-lower {
                background: #8d703b;
            }

            .sidebar-wrap input[type=range]:focus::-ms-fill-upper {
                background: #8d703b;
            }

        .sidebar-wrap input[type=range]::-webkit-slider-runnable-track {
            width: 100%;
            height: 5px;
            cursor: pointer;
            animate: 0.2s;
            background: #8d703b;
            border-radius: 1px;
            -webkit-box-shadow: none;
            box-shadow: none;
            border: 0;
        }

        .sidebar-wrap input[type=range]::-webkit-slider-thumb {
            z-index: 2;
            position: relative;
            -webkit-box-shadow: 0px 0px 0px #000;
            box-shadow: 0px 0px 0px #000;
            border: 1px solid #8d703b;
            height: 18px;
            width: 18px;
            border-radius: 25px;
            background: #8d703b;
            cursor: pointer;
            -webkit-appearance: none;
            margin-top: -7px;
        }

        .sidebar-wrap input[type=range]::-moz-range-track {
            width: 100%;
            height: 5px;
            cursor: pointer;
            animate: 0.2s;
            background: #8d703b;
            border-radius: 1px;
            box-shadow: none;
            border: 0;
        }

        .sidebar-wrap input[type=range]::-moz-range-thumb {
            z-index: 2;
            position: relative;
            box-shadow: 0px 0px 0px #000;
            border: 1px solid #8d703b;
            height: 18px;
            width: 18px;
            border-radius: 25px;
            background: #8d703b;
            cursor: pointer;
        }

        .sidebar-wrap input[type=range]::-ms-track {
            width: 100%;
            height: 5px;
            cursor: pointer;
            animate: 0.2s;
            background: transparent;
            border-color: transparent;
            color: transparent;
        }

        .sidebar-wrap input[type=range]::-ms-fill-lower,
        .sidebar-wrap input[type=range]::-ms-fill-upper {
            background: #8d703b;
            border-radius: 1px;
            box-shadow: none;
            border: 0;
        }

        .sidebar-wrap input[type=range]::-ms-thumb {
            z-index: 2;
            position: relative;
            box-shadow: 0px 0px 0px #000;
            border: 1px solid #8d703b;
            height: 18px;
            width: 18px;
            border-radius: 25px;
            background: #8d703b;
            cursor: pointer;
        }
</style>