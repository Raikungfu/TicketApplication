@model Event
@{
    TempData["Title"] = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="min-vh-100 bg-light">
    <!-- Hero Section -->
    <div style="height: auto; max-height: 60vh; background-color: #343a40;">
        @if (!string.IsNullOrEmpty(Model.Image))
        {
            <img src="@Url.Content("~/Images/" + Model.Image)" alt="@Model.Title"
                 class="img-fluid w-100" style="max-height: 60vh; object-fit: cover;" />
        }
        else
        {
            <span class="text-white">No Image</span>
        }
    </div>

    <!-- Main Content -->
    <div class="container py-5 mb-4 ">
        <div class="row">

            <!-- Left Column - Event Details -->

            <div class="col-lg-8">
                <h1 class="">@Model.Title</h1>
                <div class="d-flex align-items-center mb-4">
                    <i class="bi bi-calendar-event me-2"></i>
                    <span>@ViewBag.FormattedDate</span>
                </div>
                <div class="d-flex align-items-center">
                    <i class="bi bi-geo-alt-fill me-2"></i>
                    <span class="fw-bold">@Model.Location</span>
                </div>
            </div>


            <!-- Right Column - Ticket Categories -->
            <div class="col-lg-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h2 class="h4">Loại vé</h2>
                        @if (Model.Zones != null && Model.Zones.Any())
                        {
                            <!-- Dropdown for Zone Selection -->
                            <div class="mb-3">
                                <label for="zoneSelect" class="form-label">Zone</label>
                                <select id="zoneSelect" class="form-select" onchange="updateZoneInfo()">
                                    @foreach (var zone in Model.Zones)
                                    {
                                        <option value="@zone.Id" data-price="@zone.Price" data-availability="@zone.AvailableTickets">@zone.Name</option>
                                    }
                                </select>
                            </div>

                            <!-- Zone Information (Price and Availability) -->
                            <div id="zoneInfo" class="mb-3">
                                <span class="h5" id="zonePrice">
                                    @Model.Zones.First().Price.ToString("N0")₫
                                </span>
                                <span class="text-muted" id="zoneAvailability">
                                    Còn @Model.Zones.First().AvailableTickets vé
                                </span>
                            </div>

                            <!-- Book Ticket Button -->
                            <div class="mb-3 d-flex align-items-center">
                                <label for="quantityInput" class="form-label me-3">Số lượng:</label>
                                <input type="number" id="quantityInput" class="form-control form-control-sm" min="1" value="1" style="width: 80px;">
                                @if(Model.Zones.First().AvailableTickets > 0)
                                {
                                    <button id="bookTicketBtn" class="btn btn-primary ms-5 " onclick="addToCart()">
                                        Đặt vé
                                    </button>
                                }
                                else
                                {
                                    <button id="bookTicketBtn" class="btn btn-primary ms-5 opacity-50 disabled" onclick="addToCart()" disabled>
                                        Hết vé
                                    </button>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-lg-12 mt-5">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h2 class="h4">Thông tin sự kiện</h2>
                        <div class="prose text-gray-600">
                            @Html.Raw(Model.Description.Replace(Environment.NewLine, "<br />"))
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateZoneInfo() {
            const select = document.getElementById("zoneSelect");
            const selectedOption = select.options[select.selectedIndex];

            const price = selectedOption.getAttribute("data-price");
            const availability = selectedOption.getAttribute("data-availability");

            document.getElementById("zonePrice").textContent = parseInt(price).toLocaleString() + "₫";
            document.getElementById("zoneAvailability").textContent = "Còn " + availability + " vé";

            const bookButton = document.getElementById("bookTicketBtn");
            if (availability == "0") {
                bookButton.classList.add("opacity-50", "disabled");
                bookButton.disabled = true;
                bookButton.textContent = "Hết vé";
            } else {
                bookButton.classList.remove("opacity-50", "disabled");
                bookButton.disabled = false;
                bookButton.textContent = "Đặt vé";
            }
        }
        function addToCart() {
            const zoneId = document.getElementById("zoneSelect").value;
            const quantity = parseInt(document.getElementById("quantityInput").value);
            const availability = parseInt(document.getElementById("zoneSelect").selectedOptions[0].getAttribute("data-availability"));
            if (quantity > availability) {
                showNotification('Số lượng vé vượt quá số vé còn lại.', 'danger');
                return;
            }
            fetch(`/Cart/AddToCart?itemId=${zoneId}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ Quantity: quantity })
            })
                .then(response => {
                    console.log(response);
                    if (response.ok) {
                        showNotification('Đã thêm vào giỏ hàng!', 'success');
                        setTimeout(2000);
                        window.location.href = '/Cart';
                    } else {
                        if (response.status == 401) {
                            document.getElementById("otp-auth-login-popup").classList.remove("d-none");
                        } else {
                            showNotification('Có lỗi xảy ra khi thêm vào giỏ hàng.', 'danger');
                        }
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    showNotification('Không thể thêm vào giỏ hàng.', 'danger');
                });
        }
    </script>
}